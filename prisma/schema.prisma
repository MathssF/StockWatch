generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  sku         String   @unique // Identificador único para o produto
  description String?
  price       Float
  quantity    Int      // Quantidade disponível em estoque
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model StockTransaction {
  id          Int      @id @default(autoincrement())
  productId   Int
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  type        String   // 'IN' (entrada) ou 'OUT' (saída)
  quantity    Int
  createdAt   DateTime @default(now())
}

model RabbitMQMessage {
  id          Int      @id @default(autoincrement())
  messageId   String   @unique // ID da mensagem no RabbitMQ
  queue       String   // Nome da fila onde a mensagem foi processada
  status      String   // 'PENDING', 'PROCESSED', 'FAILED'
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Order {
  id          Int             @id @default(autoincrement())
  orderNumber String          @unique
  customerId  Int
  items       OrderItem[]
  status      String          // 'PENDING', 'SHIPPED', 'DELIVERED', 'CANCELLED'
  createdAt   DateTime        @default(now())
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId Int
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  quantity  Int
  price     Float
}
