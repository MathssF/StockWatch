# Variáveis de Ambiente para o MySQL (usado pelo Producer, Consumer, Prisma e Core)
DB_USE=mysql
DB_HOST=localhost
DB_PORT=3306
DB_USER=root
DB_PASSWORD=password
DB_DATABASE=your_mysql_database
# DB_DATABASE=StockWatchDB

# Variáveis de Ambiente para o MongoDB (usado pelo Producer e Consumer)
MONGO_URI=mongodb://localhost:27017/your_mongo_database
MONGO_URL=mongodb://root:root@localhost:27017/stockwatch?authSource=admin

# Configurações do RabbitMQ (para comunicação entre Producer e Consumer)
RABBITMQ_USER=user
RABBITMQ_PASS=password
RABBITMQ_URL=amqp://user:password@rabbitmq:5672
RABBITMQ_LOCAL=amqp://user:password@localhost:5672
RABBITMQ_QUEUE_NAME=events_queue
RABBITMQ_QUEUE_NAMES='{"checkStock": "low-stock-queue", "promotions": "promotion-queue"}'
RABBIT_QUEUE_DURABLE='{"checkStock": true, "promotions": true}'


# Portas dos Serviços
PRODUCER_PORT=3022
CONSUMER_PORT=3023
API_PORT=3025
ADMIN_PORT=3030
BASE_PORT=3007

# Chaves para segurança ou autenticação (Exemplo: JWT Secret)
JWT_SECRET=my_secret_key
JWT_EXPIRATION=3600 # Expiração em segundos (1 hora)

# Configuração de ambiente (Exemplo: desenvolvimento ou produção)
NODE_ENV=development

# Configuração para o servidor Express (Host e Porta)
EXPRESS_HOST=localhost
EXPRESS_PORT=5000

# Logs e Debug (opcional, para controle de logging no desenvolvimento)
DEBUG=true

# Configurações de CORS (caso necessário)
CORS_ORIGIN=http://localhost:3000

# Configurações adicionais
APP_NAME=Event-Driven App

#Links:

PRODUCEER_CHECK=http://localhost:3007/Producer/checkStock/informe
PRODUCER_PROMOTION=http://localhost:3007/Producer/checkStock/sendPromotion
CONSUMER_INFORME=http://localhost:3007/Consumer/stock/update-stock
CONSUMER_PROMOTION=http://localhost:3007/Consumer/stock/post-promotion

DATABASE_URL="mysql://root:password@localhost:3306/mydb"
# Caso use Postgres:
# DATABASE_URL="postgresql://postgres:mysecretpassword@localhost:5432/mydb"

#  sudo systemctl stop mysql
#  docker ps
#  sudo systemctl status mysql
#  docker-compose up -d mysql
#  sudo systemctl stop rabbitmq-server

#  docker-compose up -d




#  npx prisma migrate reset --force
#  npm run dev:seeds
#  npm run test-db