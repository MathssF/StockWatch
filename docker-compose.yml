# version: '3.8'

services:
  # RabbitMQ
  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "15672:15672" # Portas de gerenciamento
      - "5672:5672"   # Porta para comunicação
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}

  # MySQL
  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  # MongoDB
  mongo:
    image: mongo:latest
    container_name: mongo_container
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-root}
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  # Producer
  producer:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - mysql
    ports:
      - "${PRODUCER_PORT}:${PRODUCER_PORT}"
    environment:
      DATABASE_URL: "mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:${MYSQL_PORT}/${MYSQL_DATABASE}"
      RABBITMQ_URL: "${RABBITMQ_URL}"
    volumes:
      - .:/app
    command: npm run start:producer

  # Consumer
  consumer:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - mysql
    ports:
      - "${CONSUMER_PORT}:${PRODUCER_PORT}"
    environment:
      DATABASE_URL: "mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:${MYSQL_PORT}/${MYSQL_DATABASE}"
      RABBITMQ_URL: "${RABBITMQ_URL}"
    volumes:
      - .:/app
    command: npm run start:consumer

volumes:
  mysql_data:
  mongo_data:
