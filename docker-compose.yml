version: '3.8'

services:
  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "15672:15672" # Porta de gerenciamento
      - "5672:5672"   # Porta de comunicação
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    networks:
      - app-network

  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: stockwatch_db
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  mongo:
    image: mongo:latest
    container_name: mongo_container
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  producer:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - mysql
    ports:
      - "3001:3001"
    command: ["./wait-for-it.sh", "rabbitmq:5672", "--", "npm", "run", "start:producer"]
    environment:
      DATABASE_URL: "mysql://root:password@mysql:3306/stockwatch_db"
      RABBITMQ_URL: "amqp://user:password@rabbitmq:5672"
    volumes:
      - .:/app

  consumer:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - mysql
    ports:
      - "3002:3001"
    command: ["./wait-for-it.sh", "rabbitmq:5672", "--", "npm", "run", "start:consumer"]
    environment:
      DATABASE_URL: "mysql://root:password@mysql:3306/stockwatch_db"
      RABBITMQ_URL: "amqp://user:password@rabbitmq:5672"
    volumes:
      - .:/app

volumes:
  mysql_data:
  mongo_data:

networks:
  app-network:
    driver: bridge
